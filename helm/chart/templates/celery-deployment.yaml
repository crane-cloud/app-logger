{{- if .Values.celery.create -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cranecloud.name" . }}-celery
  labels:
    {{- include "cranecloud.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.celery.replicaCount }}
  selector:
    matchLabels:
      {{- include "cranecloud.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "cranecloud.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cranecloud.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "cranecloud.name" . }}-celery
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{ .Values.celery.command | toYaml | nindent 12}}
          env:
          - name: test
            value: test
          {{- range $key, $value := .Values.environment }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          ports:
            - name: celery-worker
              containerPort: {{ .Values.celery.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{- end }}
